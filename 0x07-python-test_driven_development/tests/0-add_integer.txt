The ``0-add_integer`` module
============================

Using ``add_integer``
-------------------

import ``add_integer`` from the ``0-add_integer`` module
>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(2, 1)
3

>>> add_integer(2, -1)
1

>>> add_integer(-2, -1)
-3

>>> add_integer(4)
102

>>> add_integer(0)
98

>>> add_integer(0, 0)
0

>>> add_integer(100.2, 2)
102

>>> add_integer(100.2, -2)
98

Tests with expected errors:

#Empty or None args
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

#When a string is passed
>>> add_integer("Holberton")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("Holberton", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2, "Holberton")
Traceback (most recent call last):
...
TypeError: b must be an integer

#When any other data type is passed
>>> add_integer(2, [2, 1])
Traceback (most recent call last):
...
TypeError: b must be an integer

#When bool is passed
>>> add_integer(True)
99

>>> add_integer(False)
98

>>> add_integer(True, 10)
11

>>> add_integer(1, False)
1
